import { PromiseStack } from './sigaa-promise-stack';
/**
 * Requisition stack list.
 * @category Internal
 */
export interface RequestStacks<K, T> {
    /**
     * Request without cookies (without session).
     * This stack takes precedence over the others.
     */
    noCookie: PromiseStack<K, T>;
    /**
     * Method GET.
     */
    get: PromiseStack<K, T>;
    /**
     * method POST.
     */
    post: PromiseStack<K, T>;
}
/**
 * Store request stack.
 * Serves to organize requests and avoid multiple requests at the same time,
 * if multiple requests occur at the same time, SIGAA will not respond correctly (blank pages).
 * @category Internal
 */
export interface RequestStackController<K, T> {
    /**
     * Returns RequestStacks for domain.
     * @param domain domain
     * @returns RequestStacks.
     */
    getStacksByDomain(domain: string): RequestStacks<K, T>;
    /**
     * flush all stacks.
     */
    close(): void;
}
/**
 * @category Internal
 */
export declare class SigaaRequestStack<K, T> implements RequestStackController<K, T> {
    private _stacks;
    private createStacks;
    /**
     * @inheritdoc
     */
    getStacksByDomain(domain: string): RequestStacks<K, T>;
    /**
     * @inheritdoc
     */
    close(): void;
}

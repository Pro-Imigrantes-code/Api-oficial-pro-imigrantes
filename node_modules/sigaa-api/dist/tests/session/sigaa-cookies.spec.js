"use strict";

require("source-map-support/register");

var _sigaaCookiesController = require("../../session/sigaa-cookies-controller");

test('if Sigaa cookie controller save cookies', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', ['ABC=123; Path=/', 'A=12; Path=/']);
  expect(cookieController.getCookieHeader('example.com', '/teste')).toBe('ABC=123; A=12');
});
test('if Sigaa cookie controller clears all token', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', ['ABC=123; Path=/']);
  expect(cookieController.getCookieHeader('example.com', '/teste')).toBe('ABC=123');
  cookieController.clearCookies();
  expect(cookieController.getCookieHeader('example.com', '/teste')).toBeNull();
});
test('if Sigaa cookie controller reject cookies with invalid domain', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', ['ABC=123; Path=/; Domain=anotherexample.com']);
  expect(cookieController.getCookieHeader('example.com', '/')).toBeNull();
});
test('if Sigaa cookie controller ignore cookie with different paths', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', ['ABC=123; Path=/ABC', 'AT=12; Path=/']);
  expect(cookieController.getCookieHeader('example.com', '/')).toBe('AT=12');
  expect(cookieController.getCookieHeader('example.com', '/ABC')).toBe('ABC=123; AT=12');
});
test('if Sigaa cookie controller filters cookie per domain', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', ['example=123']);
  cookieController.storeCookies('example.com', ['com=true; Path=/; Domain=com']);
  cookieController.storeCookies('anotherexample.com', ['another=123']);
  expect(cookieController.getCookieHeader('example.com', '/')).toBe('example=123; com=true');
  expect(cookieController.getCookieHeader('anotherexample.com', '/ABC')).toBe('com=true; another=123');
});
test('if cookie Expires flag works', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', [`date=true; Expires=${new Date(Date.now() - 10000).toString()}`, `dateanother=true; Expires=${new Date(Date.now() + 10000).toString()}`]);
  expect(cookieController.getCookieHeader('example.com', '/')).toBe('dateanother=true');
});
test('if cookie Max-Age flag works', () => {
  const cookieController = new _sigaaCookiesController.SigaaCookiesController();
  cookieController.storeCookies('example.com', ['date=true; Max-Age=-1000', 'anotherdate=true; Max-Age=1000', `anotherdatewithexpires=true; Max-Age=1000; Expires=${new Date(Date.now() - 10000)}`]);
  expect(cookieController.getCookieHeader('example.com', '/')).toBe('anotherdate=true; anotherdatewithexpires=true');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0cy9zZXNzaW9uL3NpZ2FhLWNvb2tpZXMuc3BlYy50cyJdLCJuYW1lcyI6WyJ0ZXN0IiwiY29va2llQ29udHJvbGxlciIsIlNpZ2FhQ29va2llc0NvbnRyb2xsZXIiLCJzdG9yZUNvb2tpZXMiLCJleHBlY3QiLCJnZXRDb29raWVIZWFkZXIiLCJ0b0JlIiwiY2xlYXJDb29raWVzIiwidG9CZU51bGwiLCJEYXRlIiwibm93IiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQUEsSUFBSSxDQUFDLHlDQUFELEVBQTRDLE1BQU07QUFDcEQsUUFBTUMsZ0JBQWdCLEdBQUcsSUFBSUMsOENBQUosRUFBekI7QUFFQUQsRUFBQUEsZ0JBQWdCLENBQUNFLFlBQWpCLENBQThCLGFBQTlCLEVBQTZDLENBQzNDLGlCQUQyQyxFQUUzQyxjQUYyQyxDQUE3QztBQUlBQyxFQUFBQSxNQUFNLENBQUNILGdCQUFnQixDQUFDSSxlQUFqQixDQUFpQyxhQUFqQyxFQUFnRCxRQUFoRCxDQUFELENBQU4sQ0FBa0VDLElBQWxFLENBQ0UsZUFERjtBQUdELENBVkcsQ0FBSjtBQVlBTixJQUFJLENBQUMsNkNBQUQsRUFBZ0QsTUFBTTtBQUN4RCxRQUFNQyxnQkFBZ0IsR0FBRyxJQUFJQyw4Q0FBSixFQUF6QjtBQUNBRCxFQUFBQSxnQkFBZ0IsQ0FBQ0UsWUFBakIsQ0FBOEIsYUFBOUIsRUFBNkMsQ0FBQyxpQkFBRCxDQUE3QztBQUNBQyxFQUFBQSxNQUFNLENBQUNILGdCQUFnQixDQUFDSSxlQUFqQixDQUFpQyxhQUFqQyxFQUFnRCxRQUFoRCxDQUFELENBQU4sQ0FBa0VDLElBQWxFLENBQ0UsU0FERjtBQUdBTCxFQUFBQSxnQkFBZ0IsQ0FBQ00sWUFBakI7QUFDQUgsRUFBQUEsTUFBTSxDQUFDSCxnQkFBZ0IsQ0FBQ0ksZUFBakIsQ0FBaUMsYUFBakMsRUFBZ0QsUUFBaEQsQ0FBRCxDQUFOLENBQWtFRyxRQUFsRTtBQUNELENBUkcsQ0FB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RUFBZ0QsR0FBaEQsQ0FBRCxDQUFOLENBQTZEQyxJQUE3RCxDQUNFLCtDQURGO0FBR0QsQ0FiRyxDQUFKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2lnYWFDb29raWVzQ29udHJvbGxlciB9IGZyb20gJ0BzZXNzaW9uL3NpZ2FhLWNvb2tpZXMtY29udHJvbGxlcic7XG5cbnRlc3QoJ2lmIFNpZ2FhIGNvb2tpZSBjb250cm9sbGVyIHNhdmUgY29va2llcycsICgpID0+IHtcbiAgY29uc3QgY29va2llQ29udHJvbGxlciA9IG5ldyBTaWdhYUNvb2tpZXNDb250cm9sbGVyKCk7XG5cbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2V4YW1wbGUuY29tJywgW1xuICAgICdBQkM9MTIzOyBQYXRoPS8nLFxuICAgICdBPTEyOyBQYXRoPS8nXG4gIF0pO1xuICBleHBlY3QoY29va2llQ29udHJvbGxlci5nZXRDb29raWVIZWFkZXIoJ2V4YW1wbGUuY29tJywgJy90ZXN0ZScpKS50b0JlKFxuICAgICdBQkM9MTIzOyBBPTEyJ1xuICApO1xufSk7XG5cbnRlc3QoJ2lmIFNpZ2FhIGNvb2tpZSBjb250cm9sbGVyIGNsZWFycyBhbGwgdG9rZW4nLCAoKSA9PiB7XG4gIGNvbnN0IGNvb2tpZUNvbnRyb2xsZXIgPSBuZXcgU2lnYWFDb29raWVzQ29udHJvbGxlcigpO1xuICBjb29raWVDb250cm9sbGVyLnN0b3JlQ29va2llcygnZXhhbXBsZS5jb20nLCBbJ0FCQz0xMjM7IFBhdGg9LyddKTtcbiAgZXhwZWN0KGNvb2tpZUNvbnRyb2xsZXIuZ2V0Q29va2llSGVhZGVyKCdleGFtcGxlLmNvbScsICcvdGVzdGUnKSkudG9CZShcbiAgICAnQUJDPTEyMydcbiAgKTtcbiAgY29va2llQ29udHJvbGxlci5jbGVhckNvb2tpZXMoKTtcbiAgZXhwZWN0KGNvb2tpZUNvbnRyb2xsZXIuZ2V0Q29va2llSGVhZGVyKCdleGFtcGxlLmNvbScsICcvdGVzdGUnKSkudG9CZU51bGwoKTtcbn0pO1xuXG50ZXN0KCdpZiBTaWdhYSBjb29raWUgY29udHJvbGxlciByZWplY3QgY29va2llcyB3aXRoIGludmFsaWQgZG9tYWluJywgKCkgPT4ge1xuICBjb25zdCBjb29raWVDb250cm9sbGVyID0gbmV3IFNpZ2FhQ29va2llc0NvbnRyb2xsZXIoKTtcbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2V4YW1wbGUuY29tJywgW1xuICAgICdBQkM9MTIzOyBQYXRoPS87IERvbWFpbj1hbm90aGVyZXhhbXBsZS5jb20nXG4gIF0pO1xuICBleHBlY3QoY29va2llQ29udHJvbGxlci5nZXRDb29raWVIZWFkZXIoJ2V4YW1wbGUuY29tJywgJy8nKSkudG9CZU51bGwoKTtcbn0pO1xuXG50ZXN0KCdpZiBTaWdhYSBjb29raWUgY29udHJvbGxlciBpZ25vcmUgY29va2llIHdpdGggZGlmZmVyZW50IHBhdGhzJywgKCkgPT4ge1xuICBjb25zdCBjb29raWVDb250cm9sbGVyID0gbmV3IFNpZ2FhQ29va2llc0NvbnRyb2xsZXIoKTtcbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2V4YW1wbGUuY29tJywgW1xuICAgICdBQkM9MTIzOyBQYXRoPS9BQkMnLFxuICAgICdBVD0xMjsgUGF0aD0vJ1xuICBdKTtcbiAgZXhwZWN0KGNvb2tpZUNvbnRyb2xsZXIuZ2V0Q29va2llSGVhZGVyKCdleGFtcGxlLmNvbScsICcvJykpLnRvQmUoJ0FUPTEyJyk7XG4gIGV4cGVjdChjb29raWVDb250cm9sbGVyLmdldENvb2tpZUhlYWRlcignZXhhbXBsZS5jb20nLCAnL0FCQycpKS50b0JlKFxuICAgICdBQkM9MTIzOyBBVD0xMidcbiAgKTtcbn0pO1xuXG50ZXN0KCdpZiBTaWdhYSBjb29raWUgY29udHJvbGxlciBmaWx0ZXJzIGNvb2tpZSBwZXIgZG9tYWluJywgKCkgPT4ge1xuICBjb25zdCBjb29raWVDb250cm9sbGVyID0gbmV3IFNpZ2FhQ29va2llc0NvbnRyb2xsZXIoKTtcbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2V4YW1wbGUuY29tJywgWydleGFtcGxlPTEyMyddKTtcbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2V4YW1wbGUuY29tJywgW1xuICAgICdjb209dHJ1ZTsgUGF0aD0vOyBEb21haW49Y29tJ1xuICBdKTtcbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2Fub3RoZXJleGFtcGxlLmNvbScsIFsnYW5vdGhlcj0xMjMnXSk7XG5cbiAgZXhwZWN0KGNvb2tpZUNvbnRyb2xsZXIuZ2V0Q29va2llSGVhZGVyKCdleGFtcGxlLmNvbScsICcvJykpLnRvQmUoXG4gICAgJ2V4YW1wbGU9MTIzOyBjb209dHJ1ZSdcbiAgKTtcbiAgZXhwZWN0KGNvb2tpZUNvbnRyb2xsZXIuZ2V0Q29va2llSGVhZGVyKCdhbm90aGVyZXhhbXBsZS5jb20nLCAnL0FCQycpKS50b0JlKFxuICAgICdjb209dHJ1ZTsgYW5vdGhlcj0xMjMnXG4gICk7XG59KTtcblxudGVzdCgnaWYgY29va2llIEV4cGlyZXMgZmxhZyB3b3JrcycsICgpID0+IHtcbiAgY29uc3QgY29va2llQ29udHJvbGxlciA9IG5ldyBTaWdhYUNvb2tpZXNDb250cm9sbGVyKCk7XG4gIGNvb2tpZUNvbnRyb2xsZXIuc3RvcmVDb29raWVzKCdleGFtcGxlLmNvbScsIFtcbiAgICBgZGF0ZT10cnVlOyBFeHBpcmVzPSR7bmV3IERhdGUoRGF0ZS5ub3coKSAtIDEwMDAwKS50b1N0cmluZygpfWAsXG4gICAgYGRhdGVhbm90aGVyPXRydWU7IEV4cGlyZXM9JHtuZXcgRGF0ZShEYXRlLm5vdygpICsgMTAwMDApLnRvU3RyaW5nKCl9YFxuICBdKTtcblxuICBleHBlY3QoY29va2llQ29udHJvbGxlci5nZXRDb29raWVIZWFkZXIoJ2V4YW1wbGUuY29tJywgJy8nKSkudG9CZShcbiAgICAnZGF0ZWFub3RoZXI9dHJ1ZSdcbiAgKTtcbn0pO1xuXG50ZXN0KCdpZiBjb29raWUgTWF4LUFnZSBmbGFnIHdvcmtzJywgKCkgPT4ge1xuICBjb25zdCBjb29raWVDb250cm9sbGVyID0gbmV3IFNpZ2FhQ29va2llc0NvbnRyb2xsZXIoKTtcbiAgY29va2llQ29udHJvbGxlci5zdG9yZUNvb2tpZXMoJ2V4YW1wbGUuY29tJywgW1xuICAgICdkYXRlPXRydWU7IE1heC1BZ2U9LTEwMDAnLFxuICAgICdhbm90aGVyZGF0ZT10cnVlOyBNYXgtQWdlPTEwMDAnLFxuICAgIGBhbm90aGVyZGF0ZXdpdGhleHBpcmVzPXRydWU7IE1heC1BZ2U9MTAwMDsgRXhwaXJlcz0ke25ldyBEYXRlKFxuICAgICAgRGF0ZS5ub3coKSAtIDEwMDAwXG4gICAgKX1gXG4gIF0pO1xuXG4gIGV4cGVjdChjb29raWVDb250cm9sbGVyLmdldENvb2tpZUhlYWRlcignZXhhbXBsZS5jb20nLCAnLycpKS50b0JlKFxuICAgICdhbm90aGVyZGF0ZT10cnVlOyBhbm90aGVyZGF0ZXdpdGhleHBpcmVzPXRydWUnXG4gICk7XG59KTtcbiJdfQ==
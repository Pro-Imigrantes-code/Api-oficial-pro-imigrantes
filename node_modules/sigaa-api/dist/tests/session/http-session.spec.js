"use strict";

require("source-map-support/register");

var _sigaaHttpSession = require("../../session/sigaa-http-session");

var _sigaaHttp = require("../../session/sigaa-http");

var _sigaaPageCache = require("../../session/sigaa-page-cache");

var _sigaaCookiesController = require("../../session/sigaa-cookies-controller");

var _sigaaRequestStack = require("../../helpers/sigaa-request-stack");

var _sigaaInstitutionController = require("../../session/sigaa-institution-controller");

var _sigaaPageIfsc = require("../../session/page/sigaa-page-ifsc");

const createHTTPInstance = () => {
  const sigaaCookiesController = new _sigaaCookiesController.SigaaCookiesController();
  const pageCache = new _sigaaPageCache.SigaaPageCache();
  const requestStackController = new _sigaaRequestStack.SigaaRequestStack();
  const institutionController = new _sigaaInstitutionController.SigaaInstitutionController('IFSC', 'https://sigaa.ifsc.edu.br');
  const httpSession = new _sigaaHttpSession.SigaaHTTPSession(institutionController, sigaaCookiesController, pageCache, requestStackController);
  return {
    http: new _sigaaHttp.SigaaHTTP(httpSession),
    httpSession: httpSession
  };
};

test('if Sigaa http returns a page', async () => {
  const http = createHTTPInstance();
  const page = await http.http.get('/');
  expect(page).toBeInstanceOf(_sigaaPageIfsc.SigaaPageIFSC);
  http.httpSession.close();
}, 30000);
test('if Sigaa http send cookies', async () => {
  const http = createHTTPInstance();
  await http.http.get('/sigaa/public/home.jsf'); // request toget cookie

  const page = await http.http.get('/sigaa/public/home.jsf');
  expect(typeof page.requestHeaders['Cookie']).toBe('string');
  http.httpSession.close();
}, 30000);
test('if Sigaa http requests again if cookies change', async () => {
  const http = createHTTPInstance();
  const firstRequest = await http.http.get('/sigaa/public/home.jsf'); // Loads cookies

  expect(firstRequest.headers['set-cookie']).toBeTruthy();
  const secondRequest = await http.http.get('/sigaa/public/home.jsf');
  expect(firstRequest === secondRequest).toBeFalsy();
  http.httpSession.close();
}, 10000);
test('if Sigaa http requests again if noCache is enable', async () => {
  const http = createHTTPInstance();
  await http.http.get('/sigaa/public/home.jsf'); // request to get cookies

  const firstRequest = await http.http.get('/sigaa/public/home.jsf'); // Loads cookies

  const secondRequest = await http.http.get('/sigaa/public/home.jsf', {
    noCache: true
  });
  expect(firstRequest !== secondRequest).toBeTruthy();
  http.httpSession.close();
}, 10000);
test('if Sigaa http cache page', async () => {
  const http = createHTTPInstance();
  await http.http.get('/sigaa/public/home.jsf'); // request to get cookies

  const firstRequest = await http.http.get('/sigaa/public/home.jsf'); // Loads cookies

  const secondRequest = await http.http.get('/sigaa/public/home.jsf'); // Loads cookies

  expect(firstRequest === secondRequest).toBeTruthy();
  http.httpSession.close();
}, 10000);
test('if Sigaa http return page same request', async () => {
  const http = createHTTPInstance();
  const firstRequest = http.http.get('/sigaa/public/home.jsf', {
    shareSameRequest: true
  });
  const secondRequest = http.http.get('/sigaa/public/home.jsf', {
    shareSameRequest: true
  });
  expect((await firstRequest) === (await secondRequest)).toBeTruthy();
  http.httpSession.close();
}, 10000);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
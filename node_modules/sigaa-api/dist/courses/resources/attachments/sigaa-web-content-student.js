"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SigaaWebContent = void 0;

require("source-map-support/register");

var _updatableResource = require("../../../resources/updatable-resource");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @category Internal
 */
class SigaaWebContent extends _updatableResource.AbstractUpdatableResource {
  constructor(http, parser, options, updater) {
    super(options.instanceIndentifier, updater);
    this.http = http;
    this.parser = parser;

    _defineProperty(this, "type", 'webcontent');

    _defineProperty(this, "_title", void 0);

    _defineProperty(this, "form", void 0);

    _defineProperty(this, "_content", void 0);

    _defineProperty(this, "_date", void 0);

    this.update(options);
  }

  update(options) {
    this._title = options.title;
    if (options.date) this._date = options.date;
    this.form = options.form;
    this.isClosed = false;
  }

  async getDate() {
    if (!this._date) {
      await this.loadWebContentPage();
    }

    return this._date;
  }

  get title() {
    this.checkIfItWasClosed();
    return this._title;
  }

  async getContent() {
    if (!this._content) {
      await this.loadWebContentPage();
    }

    return this._content;
  }

  async loadWebContentPage(retry = true) {
    this.checkIfItWasClosed();

    try {
      const page = await this.http.post(this.form.action.href, this.form.postValues);

      if (page.statusCode === 200) {
        const rows = page.$('table.formAva tr').toArray();

        for (const row of rows) {
          const rowLabel = this.parser.removeTagsHtml(page.$(row).find('th').html());
          const rowContent = this.parser.removeTagsHtml(page.$(row).find('td').html());

          switch (rowLabel) {
            case 'Título:':
              {
                this._title = rowContent;
                break;
              }

            case 'Conteúdo:':
              {
                this._content = rowContent;
                break;
              }

            case 'Data Cadastro:':
              {
                const date = this.parser.parseDates(rowContent, 1);
                this._date = date[0];
                break;
              }
          }
        }
      } else if (page.statusCode === 302) {
        throw new Error('SIGAA: Webcontent expired.');
      } else {
        throw new Error('SIGAA: Unexpected webcontent page status code.');
      }
    } catch (err) {
      if (retry) {
        await this.updateInstance();
        return this.loadWebContentPage(false);
      } else {
        throw err;
      }
    }
  }

  get id() {
    this.checkIfItWasClosed();
    return this.form.postValues.id;
  }

}

exports.SigaaWebContent = SigaaWebContent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
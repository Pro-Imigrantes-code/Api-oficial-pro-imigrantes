"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SigaaQuiz = void 0;

require("source-map-support/register");

var _updatableResource = require("../../../resources/updatable-resource");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @category Internal
 */
class SigaaQuiz extends _updatableResource.AbstractUpdatableResource {
  constructor(http, options, updater) {
    super(options.instanceIndentifier, updater);
    this.http = http;

    _defineProperty(this, "type", 'quiz');

    _defineProperty(this, "errorDeadlineToReadClosed", 'SIGAA: Deadline to read as answer closed.');

    _defineProperty(this, "errorQuizYetNoSendAnswers", 'Sigaa: Quiz yet no sent answers.');

    _defineProperty(this, "_formViewAnswersSubmitted", void 0);

    _defineProperty(this, "_formSendAnswers", void 0);

    _defineProperty(this, "_startDate", void 0);

    _defineProperty(this, "_endDate", void 0);

    _defineProperty(this, "_title", void 0);

    _defineProperty(this, "_id", void 0);

    this.update(options);
  }

  update(options) {
    this._title = options.title;
    this._id = options.id;
    this._startDate = options.startDate;
    this._endDate = options.endDate;
    this._formSendAnswers = options.formSendAnswers;
    this._formViewAnswersSubmitted = options.formViewAnswersSubmitted;
    this.isClosed = false;
  }

  get title() {
    this.checkIfItWasClosed();
    return this._title;
  }

  get id() {
    this.checkIfItWasClosed();
    return this._id;
  }

  get endDate() {
    this.checkIfItWasClosed();
    return this._endDate;
  }

  get startDate() {
    this.checkIfItWasClosed();
    return this._startDate;
  }
  /**
   * TODO
   * @param retry
   */


  async getAnswersSubmitted(retry = true) {
    try {
      if (this._formViewAnswersSubmitted === undefined) throw new Error('SIGAA: Quiz form is undefined.');
      const page = await this.http.post(this._formViewAnswersSubmitted.action.href, this._formViewAnswersSubmitted.postValues);

      switch (page.statusCode) {
        case 200:
          if (page.bodyDecoded.includes('Acabou o prazo para visualizar as respostas.')) throw new Error(this.errorDeadlineToReadClosed);
          if (page.bodyDecoded.includes('Você ainda não enviou respostas para este questionário')) throw new Error(this.errorQuizYetNoSendAnswers);
          break;

        case 302:
          throw new Error('SIGAA: Quiz expired.');

        default:
          throw new Error('SIGAA: Quiz page status code unexpected.');
      }
    } catch (err) {
      if (err.message === this.errorDeadlineToReadClosed || err.message === this.errorQuizYetNoSendAnswers) {
        throw err;
      }

      if (retry) {
        await this.updateInstance();
        this.getAnswersSubmitted(false);
      } else {
        throw err;
      }
    }
  }

}

exports.SigaaQuiz = SigaaQuiz;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
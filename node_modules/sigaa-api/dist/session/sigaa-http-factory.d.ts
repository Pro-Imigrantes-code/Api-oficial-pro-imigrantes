/// <reference types="node" />
import { HTTPSession } from './sigaa-http-session';
import { BondController } from './sigaa-bond-controller';
import { HTTP } from './sigaa-http';
import { PageCacheWithBond } from './sigaa-page-cache-with-bond';
import { URL } from 'url';
/**
 * @category Internal
 */
export interface HTTPFactory {
    /**
     * Return a instance without bond
     */
    createHttp(): HTTP;
    /**
     * Return http instance with bond
     * @param string bondId
     */
    createHttpWithBond(bondSwitchUrl: URL): HTTP;
}
/**
 * Class responsible for creating a new http instance
 * @category Internal
 *
 */
export declare class SigaaHTTPFactory implements HTTPFactory {
    private httpSession;
    private pageCacheWithBond;
    private bondController;
    constructor(httpSession: HTTPSession, pageCacheWithBond: PageCacheWithBond, bondController: BondController);
    /**
     * @inheritdoc
     */
    createHttp(): HTTP;
    /**
     * @inheritdoc
     */
    createHttpWithBond(bondSwitchUrl: URL): HTTP;
}

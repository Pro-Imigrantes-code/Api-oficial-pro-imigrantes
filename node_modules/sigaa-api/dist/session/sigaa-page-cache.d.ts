/// <reference types="node" />
import { HTTPRequestOptions } from './sigaa-http';
import { Page } from './sigaa-page';
/**
 * @category Internal
 */
export interface PageCache {
    /**
     * Get Page from cache
     */
    getPage(httpOptions: HTTPRequestOptions, body?: string | Buffer): Page | undefined;
    /**
     * Cache a page or update if the same request values
     * @param page
     */
    storePage(page: Page): void;
    /**
     * Flush states of instance
     */
    clearCachePage(): void;
}
/**
 * Store page cache.
 * @category Internal
 */
export declare class SigaaPageCache implements PageCache {
    /**
     * Array of all pages in cache.
     */
    private cachePages;
    /**
     * Interval id to clear the cache.
     */
    private intervalId?;
    /**
     * Cache page timeout, default is 5 min
     */
    timeoutCache: number;
    /**
     * @inheritdoc
     */
    clearCachePage(): void;
    /**
     * @inheritdoc
     */
    storePage(page: Page): void;
    /**
     * @inheritdoc
     */
    getPage(httpOptions: HTTPRequestOptions, body?: string | Buffer): Page | undefined;
}

/// <reference types="node" />
import { FormData } from 'formdata-node';
import { URL } from 'url';
import { Page } from './sigaa-page';
import { HTTP, ProgressCallback, SigaaRequestOptions } from './sigaa-http';
import { BondController } from './sigaa-bond-controller';
import { PageCacheWithBond } from './sigaa-page-cache-with-bond';
/**
 * Implements sigaa bond in HTTP request class.
 *
 * @param http http instamce implementation
 * @param bondController A instance of BondController to read current bond
 * @param bondSwitchUrl url to switch bond
 *
 * @category Internal
 */
export declare class SigaaHTTPWithBond implements HTTP {
    private http;
    private bondController;
    private pageCacheWithBond;
    private bondSwitchUrl;
    constructor(http: HTTP, bondController: BondController, pageCacheWithBond: PageCacheWithBond, bondSwitchUrl: URL | null);
    /**
     * Verify if current bond is correct.
     * Otherwise, switch bond
     */
    private verifyIfBondIsCorrect;
    /**
     * Switch bond
     */
    private switchBond;
    /**
     * @inheritdoc
     */
    postMultipart(path: string, formData: FormData, options?: SigaaRequestOptions): Promise<Page>;
    /**
     * @inheritdoc
     */
    post(path: string, postValues: Record<string, string>, options?: SigaaRequestOptions): Promise<Page>;
    get(path: string, options?: SigaaRequestOptions): Promise<Page>;
    /**
     * @inheritdoc
     */
    downloadFileByGet(urlPath: string, basepath: string, callback?: ProgressCallback): Promise<string>;
    /**
     * @inheritdoc
     */
    downloadFileByPost(urlPath: string, postValues: Record<string, string>, basepath: string, callback?: ProgressCallback): Promise<string>;
    /**
     * @inheritdoc
     */
    followAllRedirect(page: Page, options?: SigaaRequestOptions): Promise<Page>;
    /**
     * @inheritdoc
     */
    closeSession(): void;
}

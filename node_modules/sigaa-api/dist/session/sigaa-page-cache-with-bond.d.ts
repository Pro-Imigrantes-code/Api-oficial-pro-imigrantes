/// <reference types="node" />
import { HTTPRequestOptions } from './sigaa-http';
import { Page } from './sigaa-page';
import { PageCache } from './sigaa-page-cache';
import { PageCacheFactory } from './sigaa-page-cache-factory';
/**
 * @category Internal
 */
export interface PageCacheWithBond extends PageCache {
    /**
     *Define the current bond, each bond has its own cache
     */
    setCurrentBond(bondSwitchUrl: URL | null): void;
}
/**
 * Transforms the cache mechanism to be dependent on the current bond.
 * @category Internal
 */
export declare class SigaaPageCacheWithBond implements PageCacheWithBond {
    private cachePageFactory;
    /**
     * List of all cache instances.
     */
    private cacheInstances;
    /**
     * Cache for the current bond
     */
    private currentCache;
    /**
     * Current bond
     */
    private currentBond;
    constructor(cachePageFactory: PageCacheFactory);
    /**
     * @inheritdoc
     */
    setCurrentBond(bondSwitchURL: URL | null): void;
    /**
     * @inheritdoc
     */
    getPage(httpOptions: HTTPRequestOptions, body?: string | Buffer): Page | undefined;
    /**
     * @inheritdoc
     */
    storePage(page: Page): void;
    /**
     * @inheritdoc
     */
    clearCachePage(): void;
}

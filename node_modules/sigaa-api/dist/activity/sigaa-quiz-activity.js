"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SigaaActivityQuiz = void 0;

require("source-map-support/register");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class SigaaActivityQuiz {
  constructor(activityData, studentBond) {
    this.activityData = activityData;
    this.studentBond = studentBond;

    _defineProperty(this, "type", 'quiz');
  }
  /**
   * @inheritdoc
   */


  get quizId() {
    if (!this.activityData.form.postValues) throw new Error('SIGAA: Activity Quiz form without id.');
    return this.activityData.form.postValues['id'];
  }
  /**
   * @inheritdoc
   */


  get quizTitle() {
    return this.activityData.quizTitle;
  }
  /**
   * @inheritdoc
   */


  get courseId() {
    if (!this.activityData.form.postValues['idTurma']) throw new Error('SIGAA: Activity Quiz form without idTurma.');
    return this.activityData.form.postValues['idTurma'];
  }
  /**
   * @inheritdoc
   */


  get courseTitle() {
    return this.activityData.courseTitle;
  }
  /**
   * @inheritdoc
   */


  async getCourse() {
    const courses = await this.studentBond.getCourses();
    const course = courses.find(course => course.id === this.courseId);
    if (!course) throw new Error('SIGAA: Cannot find the course referenced by the activity.');
    return course;
  }
  /**
   * @inheritdoc
   */


  async getQuiz() {
    const course = await this.getCourse();
    const quizzes = await course.getQuizzes();
    const quiz = quizzes.find(quiz => quiz.id === this.quizId);
    if (!quiz) throw new Error('SIGAA: Cannot find the quiz referenced by the activity.');
    return quiz;
  }
  /**
   * @inheritdoc
   */


  get date() {
    return this.activityData.date;
  }
  /**
   * @inheritdoc
   */


  get done() {
    return this.activityData.done;
  }

}

exports.SigaaActivityQuiz = SigaaActivityQuiz;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hY3Rpdml0eS9zaWdhYS1xdWl6LWFjdGl2aXR5LnRzIl0sIm5hbWVzIjpbIlNpZ2FhQWN0aXZpdHlRdWl6IiwiY29uc3RydWN0b3IiLCJhY3Rpdml0eURhdGEiLCJzdHVkZW50Qm9uZCIsInF1aXpJZCIsImZvcm0iLCJwb3N0VmFsdWVzIiwiRXJyb3IiLCJxdWl6VGl0bGUiLCJjb3Vyc2VJZCIsImNvdXJzZVRpdGxlIiwiZ2V0Q291cnNlIiwiY291cnNlcyIsImdldENvdXJzZXMiLCJjb3Vyc2UiLCJmaW5kIiwiaWQiLCJnZXRRdWl6IiwicXVpenplcyIsImdldFF1aXp6ZXMiLCJxdWl6IiwiZGF0ZSIsImRvbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBK0NPLE1BQU1BLGlCQUFOLENBQWdEO0FBR3JEQyxFQUFBQSxXQUFXLENBQ0RDLFlBREMsRUFFREMsV0FGQyxFQUdUO0FBQUEsU0FGUUQsWUFFUixHQUZRQSxZQUVSO0FBQUEsU0FEUUMsV0FDUixHQURRQSxXQUNSOztBQUFBLGtDQUxxQixNQUtyQjtBQUFFO0FBRUo7QUFDRjtBQUNBOzs7QUFDWSxNQUFOQyxNQUFNLEdBQVc7QUFDbkIsUUFBSSxDQUFDLEtBQUtGLFlBQUwsQ0FBa0JHLElBQWxCLENBQXVCQyxVQUE1QixFQUNFLE1BQU0sSUFBSUMsS0FBSixDQUFVLHVDQUFWLENBQU47QUFDRixXQUFPLEtBQUtMLFlBQUwsQ0FBa0JHLElBQWxCLENBQXVCQyxVQUF2QixDQUFrQyxJQUFsQyxDQUFQO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNlLE1BQVRFLFNBQVMsR0FBVztBQUN0QixXQUFPLEtBQUtOLFlBQUwsQ0FBa0JNLFNBQXpCO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNjLE1BQVJDLFFBQVEsR0FBVztBQUNyQixRQUFJLENBQUMsS0FBS1AsWUFBTCxDQUFrQkcsSUFBbEIsQ0FBdUJDLFVBQXZCLENBQWtDLFNBQWxDLENBQUwsRUFDRSxNQUFNLElBQUlDLEtBQUosQ0FBVSw0Q0FBVixDQUFOO0FBQ0YsV0FBTyxLQUFLTCxZQUFMLENBQWtCRyxJQUFsQixDQUF1QkMsVUFBdkIsQ0FBa0MsU0FBbEMsQ0FBUDtBQUNEO0FBRUQ7QUFDRjtBQUNBOzs7QUFDaUIsTUFBWEksV0FBVyxHQUFXO0FBQ3hCLFdBQU8sS0FBS1IsWUFBTCxDQUFrQlEsV0FBekI7QUFDRDtBQUVEO0FBQ0Y7QUFDQTs7O0FBQ2lCLFFBQVRDLFNBQVMsR0FBMkI7QUFDeEMsVUFBTUMsT0FBTyxHQUFHLE1BQU0sS0FBS1QsV0FBTCxDQUFpQlUsVUFBakIsRUFBdEI7QUFDQSxVQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csSUFBUixDQUFjRCxNQUFELElBQVlBLE1BQU0sQ0FBQ0UsRUFBUCxLQUFjLEtBQUtQLFFBQTVDLENBQWY7QUFDQSxRQUFJLENBQUNLLE1BQUwsRUFDRSxNQUFNLElBQUlQLEtBQUosQ0FDSiwyREFESSxDQUFOO0FBR0YsV0FBT08sTUFBUDtBQUNEO0FBRUQ7QUFDRjtBQUNBOzs7QUFDZSxRQUFQRyxPQUFPLEdBQWtCO0FBQzdCLFVBQU1ILE1BQU0sR0FBRyxNQUFNLEtBQUtILFNBQUwsRUFBckI7QUFDQSxVQUFNTyxPQUFPLEdBQUcsTUFBTUosTUFBTSxDQUFDSyxVQUFQLEVBQXRCO0FBQ0EsVUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUNILElBQVIsQ0FBY0ssSUFBRCxJQUFVQSxJQUFJLENBQUNKLEVBQUwsS0FBWSxLQUFLWixNQUF4QyxDQUFiO0FBQ0EsUUFBSSxDQUFDZ0IsSUFBTCxFQUNFLE1BQU0sSUFBSWIsS0FBSixDQUNKLHlEQURJLENBQU47QUFHRixXQUFPYSxJQUFQO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7OztBQUNVLE1BQUpDLElBQUksR0FBUztBQUNmLFdBQU8sS0FBS25CLFlBQUwsQ0FBa0JtQixJQUF6QjtBQUNEO0FBRUQ7QUFDRjtBQUNBOzs7QUFDVSxNQUFKQyxJQUFJLEdBQVk7QUFDbEIsV0FBTyxLQUFLcEIsWUFBTCxDQUFrQm9CLElBQXpCO0FBQ0Q7O0FBL0VvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1aXogfSBmcm9tICdAYXR0YWNobWVudHMvc2lnYWEtcXVpei1zdHVkZW50JztcbmltcG9ydCB7IFN0dWRlbnRCb25kIH0gZnJvbSAnQGJvbmRzL3NpZ2FhLXN0dWRlbnQtYm9uZCc7XG5pbXBvcnQgeyBDb3Vyc2VTdHVkZW50IH0gZnJvbSAnQGNvdXJzZXMvc2lnYWEtY291cnNlLXN0dWRlbnQnO1xuaW1wb3J0IHsgU2lnYWFGb3JtIH0gZnJvbSAnQHNlc3Npb24vc2lnYWEtcGFnZSc7XG5cbi8qKlxuICpcbiAqIEBjYXRlZ29yeSBJbnRlcm5hbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5UXVpekRhdGEge1xuICBjb3Vyc2VUaXRsZTogc3RyaW5nO1xuICBxdWl6VGl0bGU6IHN0cmluZztcbiAgaWQ6IHN0cmluZztcbiAgZm9ybTogU2lnYWFGb3JtO1xuICBkYXRlOiBEYXRlO1xuICBkb25lOiBib29sZWFuO1xufVxuLyoqXG4gKlxuICogQGNhdGVnb3J5IFB1YmxpY1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5UXVpeiB7XG4gIHJlYWRvbmx5IHR5cGU6ICdxdWl6JztcblxuICAvKipcbiAgICogUmV0dXJuIHRoZSBhY3Rpdml0eSBjb3Vyc2UuXG4gICAqL1xuICBnZXRDb3Vyc2UoKTogUHJvbWlzZTxDb3Vyc2VTdHVkZW50PjtcbiAgZ2V0UXVpeigpOiBQcm9taXNlPFF1aXo+O1xuXG4gIC8qIFF1aXogaWQgKi9cbiAgcXVpeklkOiBzdHJpbmc7XG4gIC8qIFF1aXogdGl0bGUqL1xuICBxdWl6VGl0bGU6IHN0cmluZztcblxuICAvKiBRdWl6IGNvdXJzZSBJRCAqL1xuICBjb3Vyc2VJZDogc3RyaW5nO1xuICAvKiBRdWl6IGNvdXJzZSB0aXRsZSAqL1xuICBjb3Vyc2VUaXRsZTogc3RyaW5nO1xuXG4gIC8qIEFjdGl2aXR5IGRhdGUgKi9cbiAgcmVhZG9ubHkgZGF0ZTogRGF0ZTtcblxuICAvKiBJZiB0aGUgcXVpeiBkZWFkbGluZSBoYXMgZXhwaXJlZCBoYXMgZXhwaXJlZCBvciBpZiBpdCBoYXMgYWxyZWFkeSBiZWVuIHNlbnQgKi9cbiAgcmVhZG9ubHkgZG9uZTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNsYXNzIFNpZ2FhQWN0aXZpdHlRdWl6IGltcGxlbWVudHMgQWN0aXZpdHlRdWl6IHtcbiAgcHVibGljIHJlYWRvbmx5IHR5cGUgPSAncXVpeic7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBhY3Rpdml0eURhdGE6IEFjdGl2aXR5UXVpekRhdGEsXG4gICAgcHJpdmF0ZSBzdHVkZW50Qm9uZDogU3R1ZGVudEJvbmRcbiAgKSB7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdGRvY1xuICAgKi9cbiAgZ2V0IHF1aXpJZCgpOiBzdHJpbmcge1xuICAgIGlmICghdGhpcy5hY3Rpdml0eURhdGEuZm9ybS5wb3N0VmFsdWVzKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdTSUdBQTogQWN0aXZpdHkgUXVpeiBmb3JtIHdpdGhvdXQgaWQuJyk7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZpdHlEYXRhLmZvcm0ucG9zdFZhbHVlc1snaWQnXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdGRvY1xuICAgKi9cbiAgZ2V0IHF1aXpUaXRsZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmFjdGl2aXR5RGF0YS5xdWl6VGl0bGU7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXRkb2NcbiAgICovXG4gIGdldCBjb3Vyc2VJZCgpOiBzdHJpbmcge1xuICAgIGlmICghdGhpcy5hY3Rpdml0eURhdGEuZm9ybS5wb3N0VmFsdWVzWydpZFR1cm1hJ10pXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NJR0FBOiBBY3Rpdml0eSBRdWl6IGZvcm0gd2l0aG91dCBpZFR1cm1hLicpO1xuICAgIHJldHVybiB0aGlzLmFjdGl2aXR5RGF0YS5mb3JtLnBvc3RWYWx1ZXNbJ2lkVHVybWEnXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdGRvY1xuICAgKi9cbiAgZ2V0IGNvdXJzZVRpdGxlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZpdHlEYXRhLmNvdXJzZVRpdGxlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0ZG9jXG4gICAqL1xuICBhc3luYyBnZXRDb3Vyc2UoKTogUHJvbWlzZTxDb3Vyc2VTdHVkZW50PiB7XG4gICAgY29uc3QgY291cnNlcyA9IGF3YWl0IHRoaXMuc3R1ZGVudEJvbmQuZ2V0Q291cnNlcygpO1xuICAgIGNvbnN0IGNvdXJzZSA9IGNvdXJzZXMuZmluZCgoY291cnNlKSA9PiBjb3Vyc2UuaWQgPT09IHRoaXMuY291cnNlSWQpO1xuICAgIGlmICghY291cnNlKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnU0lHQUE6IENhbm5vdCBmaW5kIHRoZSBjb3Vyc2UgcmVmZXJlbmNlZCBieSB0aGUgYWN0aXZpdHkuJ1xuICAgICAgKTtcbiAgICByZXR1cm4gY291cnNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0ZG9jXG4gICAqL1xuICBhc3luYyBnZXRRdWl6KCk6IFByb21pc2U8UXVpej4ge1xuICAgIGNvbnN0IGNvdXJzZSA9IGF3YWl0IHRoaXMuZ2V0Q291cnNlKCk7XG4gICAgY29uc3QgcXVpenplcyA9IGF3YWl0IGNvdXJzZS5nZXRRdWl6emVzKCk7XG4gICAgY29uc3QgcXVpeiA9IHF1aXp6ZXMuZmluZCgocXVpeikgPT4gcXVpei5pZCA9PT0gdGhpcy5xdWl6SWQpO1xuICAgIGlmICghcXVpeilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1NJR0FBOiBDYW5ub3QgZmluZCB0aGUgcXVpeiByZWZlcmVuY2VkIGJ5IHRoZSBhY3Rpdml0eS4nXG4gICAgICApO1xuICAgIHJldHVybiBxdWl6O1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0ZG9jXG4gICAqL1xuICBnZXQgZGF0ZSgpOiBEYXRlIHtcbiAgICByZXR1cm4gdGhpcy5hY3Rpdml0eURhdGEuZGF0ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdGRvY1xuICAgKi9cbiAgZ2V0IGRvbmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZpdHlEYXRhLmRvbmU7XG4gIH1cbn1cbiJdfQ==
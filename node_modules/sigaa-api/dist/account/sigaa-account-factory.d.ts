import { BondFactory } from '..\bonds/sigaa-bond-factory';
import { Parser } from '..\helpers/sigaa-parser';
import { HTTP } from '..\session/sigaa-http';
import { Page } from '..\session/sigaa-page';
import { Session } from '..\session/sigaa-session';
import { Account } from './sigaa-account';
/**
 * Abstraction to represent the class that instantiates the account.
 * @category Internal
 */
export interface AccountFactory {
    /**
     * Creates a new instance of Account.
     * @param page home page of account (page after login).
     */
    getAccount(page: Page): Promise<Account>;
}
/**
 *
 * Serves to create account instances.
 * @category Internal
 */
export declare class SigaaAccountFactory implements AccountFactory {
    private http;
    private parser;
    private session;
    private bondFactory;
    constructor(http: HTTP, parser: Parser, session: Session, bondFactory: BondFactory);
    /**
     * Creates a new instance of Account.
     * @param page home page of account (page after login).
     */
    getAccount(page: Page): Promise<Account>;
}
